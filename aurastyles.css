:root
{
	--font-size: 1rem;
	--action-bar-height: 3rem;
	--info-bar-height: 2rem;

	--theme-color: rgb(0, 132, 255);
	--theme-color-10: rgba(from var(--theme-color) r g b / 0.1);
	--theme-color-20: rgba(from var(--theme-color) r g b / 0.2);
	--theme-color-30: rgba(from var(--theme-color) r g b / 0.3);
	--theme-color-40: rgba(from var(--theme-color) r g b / 0.4);
	--theme-color-50: rgba(from var(--theme-color) r g b / 0.5);
	--theme-color-60: rgba(from var(--theme-color) r g b / 0.6);
	--theme-color-70: rgba(from var(--theme-color) r g b / 0.7);
	--theme-color-80: rgba(from var(--theme-color) r g b / 0.8);
	--theme-color-90: rgba(from var(--theme-color) r g b / 0.9);

	--theme-color-background: hsl(from var(--theme-color) h s 5%);

	--theme-color-text: hsl(from var(--theme-color) h s 95%);
	--theme-color-text-10: rgba(from var(--theme-color-text) r g b / 0.1);
	--theme-color-text-20: rgba(from var(--theme-color-text) r g b / 0.2);
	--theme-color-text-30: rgba(from var(--theme-color-text) r g b / 0.3);
	--theme-color-text-40: rgba(from var(--theme-color-text) r g b / 0.4);
	--theme-color-text-50: rgba(from var(--theme-color-text) r g b / 0.5);
	--theme-color-text-60: rgba(from var(--theme-color-text) r g b / 0.6);
	--theme-color-text-70: rgba(from var(--theme-color-text) r g b / 0.7);
	--theme-color-text-80: rgba(from var(--theme-color-text) r g b / 0.8);
	--theme-color-text-90: rgba(from var(--theme-color-text) r g b / 0.9);

	--theme-invert: 0.0;
}


html
{
	background: black;
	color: var(--theme-color-text);
	position: absolute;
	inset: 0;

	font-family: AtkinsonHyperlegible;
	font-size: var(--font-size);
	letter-spacing: calc(0.15 * var(--font-size));
}

body
{
	background: var(--theme-color-background);
	position: absolute;
	inset: 0;
	margin: 0.5rem;
	border-radius: 0.5rem;

	overflow: hidden;
	clip-path: fill-box;
}

.content-root
{
	z-index: 500;

	position: absolute;
	left: 0;
	right: 0;
	top: var(--action-bar-height);
	height: calc(100% - (var(--action-bar-height) + var(--info-bar-height)));
}

.content-body
{
	position: absolute;
	inset: 0;
	width: calc(100vw - 8rem);
	margin: 1rem;
	padding: 1rem;
	justify-self: center;

	border-radius: 0.5rem;
	box-shadow: 0px 0px 0.25rem black;
	background: hsl(from var(--theme-color) h s calc(l * 0.125));

	outline: solid 2px var(--theme-color-10);
	outline-offset: 0.25rem;
}


.aura-button-loginrequired
{
	position: absolute;
	z-index: 1000;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transform-origin: 0% 0%;
}

.aura-button
{
	user-select: none;
	cursor: pointer;

	border-radius: calc(0.5 * var(--font-size));
	padding: var(--font-size);
	min-width: 6rem;
	color: var(--theme-color-text-60);
	text-align: center;
	align-content: center;
	background: var(--theme-color-10);
	outline: solid 0px transparent;

	transition-property: background, color, scale, rotate, outline;
	transition-timing-function: ease-in-out;
	transition-duration: 0.2s;
}

.aura-button:hover
{
	color: var(--theme-color-text);
	background: var(--theme-color-80);
	outline: solid 2px var(--theme-color-text);
	scale: 105%;
	transition-duration: 0.05s;
}

.aura-button:active
{
	color: var(--theme-color-text-80);
	background: var(--theme-color-60);
	scale: 105%;
	rotate: 1deg;
	transition-duration: 0.05s;
}

@keyframes zoomoutline
{
	0%
	{
		outline-offset: 0.25rem;
	}
	50%
	{
		outline-offset: -0.25rem;
	}
	100%
	{
		outline-offset: 0.25rem;
	}
}

.theme-inverter
{
	z-index: 5000000;
	position: absolute;
	pointer-events: none;
	inset: 0;
	padding: 0;
	margin: 0;
	backdrop-filter: invert(var(--theme-invert)) hue-rotate(calc(var(--theme-invert) * 180deg));
}

.spotlight
{
	z-index: 10000000;
	position: absolute;
	inset: 0;
	padding: 0;
	margin: 0;

	pointer-events: none;

	opacity: 0%;

	background-image:
		linear-gradient(0deg, #000 30%, #fff 30%),
		linear-gradient(90deg, #000 30%, #fff 30%),
		linear-gradient(0deg, #fff 70%, #000 70%),
		linear-gradient(90deg, #fff 70%, #000 70%);

	transition-property: opacity;
	transition-timing-function: ease-in-out;
	transition-duration: 0.2s;
	transition-delay: 1s;

	mix-blend-mode: multiply;
}

img
{
	filter: invert(var(--theme-invert)) hue-rotate(calc(180deg * var(--theme-invert)));
}